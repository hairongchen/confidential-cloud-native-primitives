// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
//      protoc-gen-go v1.32.0
//      protoc        v4.25.3
// source: proto/ccnp-server.proto

package ccnp

import (
        protoreflect "google.golang.org/protobuf/reflect/protoreflect"
        protoimpl "google.golang.org/protobuf/runtime/protoimpl"
        reflect "reflect"
        sync "sync"
)

const (
        // Verify that this generated code is sufficiently up-to-date.
        _ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
        // Verify that runtime/protoimpl is sufficiently up-to-date.
        _ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HealthCheckResponse_ServingStatus int32

const (
        HealthCheckResponse_UNKNOWN         HealthCheckResponse_ServingStatus = 0
        HealthCheckResponse_SERVING         HealthCheckResponse_ServingStatus = 1
        HealthCheckResponse_NOT_SERVING     HealthCheckResponse_ServingStatus = 2
        HealthCheckResponse_SERVICE_UNKNOWN HealthCheckResponse_ServingStatus = 3
)

// Enum value maps for HealthCheckResponse_ServingStatus.
var (
        HealthCheckResponse_ServingStatus_name = map[int32]string{
                0: "UNKNOWN",
                1: "SERVING",
                2: "NOT_SERVING",
                3: "SERVICE_UNKNOWN",
        }
        HealthCheckResponse_ServingStatus_value = map[string]int32{
                "UNKNOWN":         0,
                "SERVING":         1,
                "NOT_SERVING":     2,
                "SERVICE_UNKNOWN": 3,
        }
)

func (x HealthCheckResponse_ServingStatus) Enum() *HealthCheckResponse_ServingStatus {
        p := new(HealthCheckResponse_ServingStatus)
        *p = x
        return p
}

func (x HealthCheckResponse_ServingStatus) String() string {
        return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthCheckResponse_ServingStatus) Descriptor() protoreflect.EnumDescriptor {
        return file_proto_ccnp_server_proto_enumTypes[0].Descriptor()
}

func (HealthCheckResponse_ServingStatus) Type() protoreflect.EnumType {
        return &file_proto_ccnp_server_proto_enumTypes[0]
}

func (x HealthCheckResponse_ServingStatus) Number() protoreflect.EnumNumber {
        return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthCheckResponse_ServingStatus.Descriptor instead.
func (HealthCheckResponse_ServingStatus) EnumDescriptor() ([]byte, []int) {
        return file_proto_ccnp_server_proto_rawDescGZIP(), []int{1, 0}
}

type HealthCheckRequest struct {
        state         protoimpl.MessageState
        sizeCache     protoimpl.SizeCache
        unknownFields protoimpl.UnknownFields

        Service string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
}

func (x *HealthCheckRequest) Reset() {
        *x = HealthCheckRequest{}
        if protoimpl.UnsafeEnabled {
                mi := &file_proto_ccnp_server_proto_msgTypes[0]
                ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
                ms.StoreMessageInfo(mi)
        }
}

func (x *HealthCheckRequest) String() string {
        return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
        mi := &file_proto_ccnp_server_proto_msgTypes[0]
        if protoimpl.UnsafeEnabled && x != nil {
                ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
                if ms.LoadMessageInfo() == nil {
                        ms.StoreMessageInfo(mi)
                }
                return ms
        }
        return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
        return file_proto_ccnp_server_proto_rawDescGZIP(), []int{0}
}

func (x *HealthCheckRequest) GetService() string {
        if x != nil {
                return x.Service
        }
        return ""
}

type HealthCheckResponse struct {
        state         protoimpl.MessageState
        sizeCache     protoimpl.SizeCache
        unknownFields protoimpl.UnknownFields

        Status HealthCheckResponse_ServingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=ccnp_server_pb.HealthCheckResponse_ServingStatus" json:"status,omitempty"`
}

func (x *HealthCheckResponse) Reset() {
        *x = HealthCheckResponse{}
        if protoimpl.UnsafeEnabled {
                mi := &file_proto_ccnp_server_proto_msgTypes[1]
                ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
                ms.StoreMessageInfo(mi)
        }
}

func (x *HealthCheckResponse) String() string {
        return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
        mi := &file_proto_ccnp_server_proto_msgTypes[1]
        if protoimpl.UnsafeEnabled && x != nil {
                ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
                if ms.LoadMessageInfo() == nil {
                        ms.StoreMessageInfo(mi)
                }
                return ms
        }
        return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
        return file_proto_ccnp_server_proto_rawDescGZIP(), []int{1}
}

func (x *HealthCheckResponse) GetStatus() HealthCheckResponse_ServingStatus {
        if x != nil {
                return x.Status
        }
        return HealthCheckResponse_UNKNOWN
}

type GetDefaultAlgorithmRequest struct {
        state         protoimpl.MessageState
        sizeCache     protoimpl.SizeCache
        unknownFields protoimpl.UnknownFields
}

func (x *GetDefaultAlgorithmRequest) Reset() {
        *x = GetDefaultAlgorithmRequest{}
        if protoimpl.UnsafeEnabled {
                mi := &file_proto_ccnp_server_proto_msgTypes[2]
                ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
                ms.StoreMessageInfo(mi)
        }
}

func (x *GetDefaultAlgorithmRequest) String() string {
        return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultAlgorithmRequest) ProtoMessage() {}

func (x *GetDefaultAlgorithmRequest) ProtoReflect() protoreflect.Message {
        mi := &file_proto_ccnp_server_proto_msgTypes[2]
        if protoimpl.UnsafeEnabled && x != nil {
                ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
                if ms.LoadMessageInfo() == nil {
                        ms.StoreMessageInfo(mi)
                }
                return ms
        }
        return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultAlgorithmRequest.ProtoReflect.Descriptor instead.
func (*GetDefaultAlgorithmRequest) Descriptor() ([]byte, []int) {
        return file_proto_ccnp_server_proto_rawDescGZIP(), []int{2}
}

type GetDefaultAlgorithmResponse struct {
        state         protoimpl.MessageState
        sizeCache     protoimpl.SizeCache
        unknownFields protoimpl.UnknownFields

        AlgoId uint32 `protobuf:"varint,1,opt,name=algo_id,json=algoId,proto3" json:"algo_id,omitempty"`
}

func (x *GetDefaultAlgorithmResponse) Reset() {
        *x = GetDefaultAlgorithmResponse{}
        if protoimpl.UnsafeEnabled {
                mi := &file_proto_ccnp_server_proto_msgTypes[3]
                ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
                ms.StoreMessageInfo(mi)
        }
}

func (x *GetDefaultAlgorithmResponse) String() string {
        return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultAlgorithmResponse) ProtoMessage() {}

func (x *GetDefaultAlgorithmResponse) ProtoReflect() protoreflect.Message {
        mi := &file_proto_ccnp_server_proto_msgTypes[3]
        if protoimpl.UnsafeEnabled && x != nil {
                ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
                if ms.LoadMessageInfo() == nil {
                        ms.StoreMessageInfo(mi)
                }
                return ms
        }
        return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultAlgorithmResponse.ProtoReflect.Descriptor instead.
func (*GetDefaultAlgorithmResponse) Descriptor() ([]byte, []int) {
        return file_proto_ccnp_server_proto_rawDescGZIP(), []int{3}
}

func (x *GetDefaultAlgorithmResponse) GetAlgoId() uint32 {
        if x != nil {
                return x.AlgoId
        }
        return 0
}

type GetMeasurementCountRequest struct {
        state         protoimpl.MessageState
        sizeCache     protoimpl.SizeCache
        unknownFields protoimpl.UnknownFields
}

func (x *GetMeasurementCountRequest) Reset() {
        *x = GetMeasurementCountRequest{}
        if protoimpl.UnsafeEnabled {
                mi := &file_proto_ccnp_server_proto_msgTypes[4]
                ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
                ms.StoreMessageInfo(mi)
        }
}

func (x *GetMeasurementCountRequest) String() string {
        return protoimpl.X.MessageStringOf(x)
}

func (*GetMeasurementCountRequest) ProtoMessage() {}

func (x *GetMeasurementCountRequest) ProtoReflect() protoreflect.Message {
        mi := &file_proto_ccnp_server_proto_msgTypes[4]
        if protoimpl.UnsafeEnabled && x != nil {
                ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
                if ms.LoadMessageInfo() == nil {
                        ms.StoreMessageInfo(mi)
                }
                return ms
        }
        return mi.MessageOf(x)
}

// Deprecated: Use GetMeasurementCountRequest.ProtoReflect.Descriptor instead.
func (*GetMeasurementCountRequest) Descriptor() ([]byte, []int) {
        return file_proto_ccnp_server_proto_rawDescGZIP(), []int{4}
}

type GetMeasurementCountResponse struct {
        state         protoimpl.MessageState
        sizeCache     protoimpl.SizeCache
        unknownFields protoimpl.UnknownFields

        Count uint32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetMeasurementCountResponse) Reset() {
        *x = GetMeasurementCountResponse{}
        if protoimpl.UnsafeEnabled {
                mi := &file_proto_ccnp_server_proto_msgTypes[5]
                ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
                ms.StoreMessageInfo(mi)
        }
}

func (x *GetMeasurementCountResponse) String() string {
        return protoimpl.X.MessageStringOf(x)
}

func (*GetMeasurementCountResponse) ProtoMessage() {}

func (x *GetMeasurementCountResponse) ProtoReflect() protoreflect.Message {
        mi := &file_proto_ccnp_server_proto_msgTypes[5]
        if protoimpl.UnsafeEnabled && x != nil {
                ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
                if ms.LoadMessageInfo() == nil {
                        ms.StoreMessageInfo(mi)
                }
                return ms
        }
        return mi.MessageOf(x)
}

// Deprecated: Use GetMeasurementCountResponse.ProtoReflect.Descriptor instead.
func (*GetMeasurementCountResponse) Descriptor() ([]byte, []int) {
        return file_proto_ccnp_server_proto_rawDescGZIP(), []int{5}
}

func (x *GetMeasurementCountResponse) GetCount() uint32 {
        if x != nil {
                return x.Count
        }
        return 0
}

type GetCcReportRequest struct {
        state         protoimpl.MessageState
        sizeCache     protoimpl.SizeCache
        unknownFields protoimpl.UnknownFields

        ContainerId string  `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
        UserData    *string `protobuf:"bytes,2,opt,name=user_data,json=userData,proto3,oneof" json:"user_data,omitempty"`
        Nonce       *string `protobuf:"bytes,3,opt,name=nonce,proto3,oneof" json:"nonce,omitempty"`
}

func (x *GetCcReportRequest) Reset() {
        *x = GetCcReportRequest{}
        if protoimpl.UnsafeEnabled {
                mi := &file_proto_ccnp_server_proto_msgTypes[6]
                ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
                ms.StoreMessageInfo(mi)
        }
}

func (x *GetCcReportRequest) String() string {
        return protoimpl.X.MessageStringOf(x)
}

func (*GetCcReportRequest) ProtoMessage() {}

func (x *GetCcReportRequest) ProtoReflect() protoreflect.Message {
        mi := &file_proto_ccnp_server_proto_msgTypes[6]
        if protoimpl.UnsafeEnabled && x != nil {
                ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
                if ms.LoadMessageInfo() == nil {
                        ms.StoreMessageInfo(mi)
                }
                return ms
        }
        return mi.MessageOf(x)
}

// Deprecated: Use GetCcReportRequest.ProtoReflect.Descriptor instead.
func (*GetCcReportRequest) Descriptor() ([]byte, []int) {
        return file_proto_ccnp_server_proto_rawDescGZIP(), []int{6}
}

func (x *GetCcReportRequest) GetContainerId() string {
        if x != nil {
                return x.ContainerId
        }
        return ""
}

func (x *GetCcReportRequest) GetUserData() string {
        if x != nil && x.UserData != nil {
                return *x.UserData
        }
        return ""
}

func (x *GetCcReportRequest) GetNonce() string {
        if x != nil && x.Nonce != nil {
                return *x.Nonce
        }
        return ""
}

type GetCcReportResponse struct {
        state         protoimpl.MessageState
        sizeCache     protoimpl.SizeCache
        unknownFields protoimpl.UnknownFields

        CcType   int32  `protobuf:"varint,1,opt,name=cc_type,json=ccType,proto3" json:"cc_type,omitempty"`
        CcReport []byte `protobuf:"bytes,2,opt,name=cc_report,json=ccReport,proto3" json:"cc_report,omitempty"`
}

func (x *GetCcReportResponse) Reset() {
        *x = GetCcReportResponse{}
        if protoimpl.UnsafeEnabled {
                mi := &file_proto_ccnp_server_proto_msgTypes[7]
                ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
                ms.StoreMessageInfo(mi)
        }
}

func (x *GetCcReportResponse) String() string {
        return protoimpl.X.MessageStringOf(x)
}

func (*GetCcReportResponse) ProtoMessage() {}

func (x *GetCcReportResponse) ProtoReflect() protoreflect.Message {
        mi := &file_proto_ccnp_server_proto_msgTypes[7]
        if protoimpl.UnsafeEnabled && x != nil {
                ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
                if ms.LoadMessageInfo() == nil {
                        ms.StoreMessageInfo(mi)
                }
                return ms
        }
        return mi.MessageOf(x)
}

// Deprecated: Use GetCcReportResponse.ProtoReflect.Descriptor instead.
func (*GetCcReportResponse) Descriptor() ([]byte, []int) {
        return file_proto_ccnp_server_proto_rawDescGZIP(), []int{7}
}

func (x *GetCcReportResponse) GetCcType() int32 {
        if x != nil {
                return x.CcType
        }
        return 0
}

func (x *GetCcReportResponse) GetCcReport() []byte {
        if x != nil {
                return x.CcReport
        }
        return nil
}

type GetCcMeasurementRequest struct {
        state         protoimpl.MessageState
        sizeCache     protoimpl.SizeCache
        unknownFields protoimpl.UnknownFields

        ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
        Index       uint32 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
        AlgoId      uint32 `protobuf:"varint,3,opt,name=algo_id,json=algoId,proto3" json:"algo_id,omitempty"`
}

func (x *GetCcMeasurementRequest) Reset() {
        *x = GetCcMeasurementRequest{}
        if protoimpl.UnsafeEnabled {
                mi := &file_proto_ccnp_server_proto_msgTypes[8]
                ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
                ms.StoreMessageInfo(mi)
        }
}

func (x *GetCcMeasurementRequest) String() string {
        return protoimpl.X.MessageStringOf(x)
}

func (*GetCcMeasurementRequest) ProtoMessage() {}

func (x *GetCcMeasurementRequest) ProtoReflect() protoreflect.Message {
        mi := &file_proto_ccnp_server_proto_msgTypes[8]
        if protoimpl.UnsafeEnabled && x != nil {
                ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
                if ms.LoadMessageInfo() == nil {
                        ms.StoreMessageInfo(mi)
                }
                return ms
        }
        return mi.MessageOf(x)
}

// Deprecated: Use GetCcMeasurementRequest.ProtoReflect.Descriptor instead.
func (*GetCcMeasurementRequest) Descriptor() ([]byte, []int) {
        return file_proto_ccnp_server_proto_rawDescGZIP(), []int{8}
}

func (x *GetCcMeasurementRequest) GetContainerId() string {
        if x != nil {
                return x.ContainerId
        }
        return ""
}

func (x *GetCcMeasurementRequest) GetIndex() uint32 {
        if x != nil {
                return x.Index
        }
        return 0
}

func (x *GetCcMeasurementRequest) GetAlgoId() uint32 {
        if x != nil {
                return x.AlgoId
        }
        return 0
}

type GetCcMeasurementResponse struct {
        state         protoimpl.MessageState
        sizeCache     protoimpl.SizeCache
        unknownFields protoimpl.UnknownFields

        Measurement *TcgDigest `protobuf:"bytes,1,opt,name=measurement,proto3" json:"measurement,omitempty"`
}

func (x *GetCcMeasurementResponse) Reset() {
        *x = GetCcMeasurementResponse{}
        if protoimpl.UnsafeEnabled {
                mi := &file_proto_ccnp_server_proto_msgTypes[9]
                ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
                ms.StoreMessageInfo(mi)
        }
}

func (x *GetCcMeasurementResponse) String() string {
        return protoimpl.X.MessageStringOf(x)
}

func (*GetCcMeasurementResponse) ProtoMessage() {}

func (x *GetCcMeasurementResponse) ProtoReflect() protoreflect.Message {
        mi := &file_proto_ccnp_server_proto_msgTypes[9]
        if protoimpl.UnsafeEnabled && x != nil {
                ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
                if ms.LoadMessageInfo() == nil {
                        ms.StoreMessageInfo(mi)
                }
                return ms
        }
        return mi.MessageOf(x)
}

// Deprecated: Use GetCcMeasurementResponse.ProtoReflect.Descriptor instead.
func (*GetCcMeasurementResponse) Descriptor() ([]byte, []int) {
        return file_proto_ccnp_server_proto_rawDescGZIP(), []int{9}
}

func (x *GetCcMeasurementResponse) GetMeasurement() *TcgDigest {
        if x != nil {
                return x.Measurement
        }
        return nil
}

type GetCcEventlogRequest struct {
        state         protoimpl.MessageState
        sizeCache     protoimpl.SizeCache
        unknownFields protoimpl.UnknownFields

        ContainerId string  `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
        Start       *uint32 `protobuf:"varint,2,opt,name=start,proto3,oneof" json:"start,omitempty"`
        Count       *uint32 `protobuf:"varint,3,opt,name=count,proto3,oneof" json:"count,omitempty"`
}

func (x *GetCcEventlogRequest) Reset() {
        *x = GetCcEventlogRequest{}
        if protoimpl.UnsafeEnabled {
                mi := &file_proto_ccnp_server_proto_msgTypes[10]
                ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
                ms.StoreMessageInfo(mi)
        }
}

func (x *GetCcEventlogRequest) String() string {
        return protoimpl.X.MessageStringOf(x)
}

func (*GetCcEventlogRequest) ProtoMessage() {}

func (x *GetCcEventlogRequest) ProtoReflect() protoreflect.Message {
        mi := &file_proto_ccnp_server_proto_msgTypes[10]
        if protoimpl.UnsafeEnabled && x != nil {
                ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
                if ms.LoadMessageInfo() == nil {
                        ms.StoreMessageInfo(mi)
                }
                return ms
        }
        return mi.MessageOf(x)
}

// Deprecated: Use GetCcEventlogRequest.ProtoReflect.Descriptor instead.
func (*GetCcEventlogRequest) Descriptor() ([]byte, []int) {
        return file_proto_ccnp_server_proto_rawDescGZIP(), []int{10}
}

func (x *GetCcEventlogRequest) GetContainerId() string {
        if x != nil {
                return x.ContainerId
        }
        return ""
}

func (x *GetCcEventlogRequest) GetStart() uint32 {
        if x != nil && x.Start != nil {
                return *x.Start
        }
        return 0
}

func (x *GetCcEventlogRequest) GetCount() uint32 {
        if x != nil && x.Count != nil {
                return *x.Count
        }
        return 0
}

type TcgDigest struct {
        state         protoimpl.MessageState
        sizeCache     protoimpl.SizeCache
        unknownFields protoimpl.UnknownFields

        AlgoId uint32 `protobuf:"varint,1,opt,name=algo_id,json=algoId,proto3" json:"algo_id,omitempty"`
        Hash   []byte `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *TcgDigest) Reset() {
        *x = TcgDigest{}
        if protoimpl.UnsafeEnabled {
                mi := &file_proto_ccnp_server_proto_msgTypes[11]
                ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
                ms.StoreMessageInfo(mi)
        }
}

func (x *TcgDigest) String() string {
        return protoimpl.X.MessageStringOf(x)
}

func (*TcgDigest) ProtoMessage() {}

func (x *TcgDigest) ProtoReflect() protoreflect.Message {
        mi := &file_proto_ccnp_server_proto_msgTypes[11]
        if protoimpl.UnsafeEnabled && x != nil {
                ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
                if ms.LoadMessageInfo() == nil {
                        ms.StoreMessageInfo(mi)
                }
                return ms
        }
        return mi.MessageOf(x)
}

// Deprecated: Use TcgDigest.ProtoReflect.Descriptor instead.
func (*TcgDigest) Descriptor() ([]byte, []int) {
        return file_proto_ccnp_server_proto_rawDescGZIP(), []int{11}
}

func (x *TcgDigest) GetAlgoId() uint32 {
        if x != nil {
                return x.AlgoId
        }
        return 0
}

func (x *TcgDigest) GetHash() []byte {
        if x != nil {
                return x.Hash
        }
        return nil
}

type TcgEventlog struct {
        state         protoimpl.MessageState
        sizeCache     protoimpl.SizeCache
        unknownFields protoimpl.UnknownFields

        RecNum    uint32            `protobuf:"varint,1,opt,name=rec_num,json=recNum,proto3" json:"rec_num,omitempty"`
        ImrIndex  uint32            `protobuf:"varint,2,opt,name=imr_index,json=imrIndex,proto3" json:"imr_index,omitempty"`
        EventType uint32            `protobuf:"varint,3,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
        Digests   []*TcgDigest      `protobuf:"bytes,4,rep,name=digests,proto3" json:"digests,omitempty"`
        EventSize uint32            `protobuf:"varint,5,opt,name=event_size,json=eventSize,proto3" json:"event_size,omitempty"`
        Event     []byte            `protobuf:"bytes,6,opt,name=event,proto3" json:"event,omitempty"`
        ExtraInfo map[string]string `protobuf:"bytes,7,rep,name=extra_info,json=extraInfo,proto3" json:"extra_info,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TcgEventlog) Reset() {
        *x = TcgEventlog{}
        if protoimpl.UnsafeEnabled {
                mi := &file_proto_ccnp_server_proto_msgTypes[12]
                ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
                ms.StoreMessageInfo(mi)
        }
}

func (x *TcgEventlog) String() string {
        return protoimpl.X.MessageStringOf(x)
}

func (*TcgEventlog) ProtoMessage() {}

func (x *TcgEventlog) ProtoReflect() protoreflect.Message {
        mi := &file_proto_ccnp_server_proto_msgTypes[12]
        if protoimpl.UnsafeEnabled && x != nil {
                ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
                if ms.LoadMessageInfo() == nil {
                        ms.StoreMessageInfo(mi)
                }
                return ms
        }
        return mi.MessageOf(x)
}

// Deprecated: Use TcgEventlog.ProtoReflect.Descriptor instead.
func (*TcgEventlog) Descriptor() ([]byte, []int) {
        return file_proto_ccnp_server_proto_rawDescGZIP(), []int{12}
}

func (x *TcgEventlog) GetRecNum() uint32 {
        if x != nil {
                return x.RecNum
        }
        return 0
}

func (x *TcgEventlog) GetImrIndex() uint32 {
        if x != nil {
                return x.ImrIndex
        }
        return 0
}

func (x *TcgEventlog) GetEventType() uint32 {
        if x != nil {
                return x.EventType
        }
        return 0
}

func (x *TcgEventlog) GetDigests() []*TcgDigest {
        if x != nil {
                return x.Digests
        }
        return nil
}

func (x *TcgEventlog) GetEventSize() uint32 {
        if x != nil {
                return x.EventSize
        }
        return 0
}

func (x *TcgEventlog) GetEvent() []byte {
        if x != nil {
                return x.Event
        }
        return nil
}

func (x *TcgEventlog) GetExtraInfo() map[string]string {
        if x != nil {
                return x.ExtraInfo
        }
        return nil
}

type GetCcEventlogResponse struct {
        state         protoimpl.MessageState
        sizeCache     protoimpl.SizeCache
        unknownFields protoimpl.UnknownFields

        EventLogs []*TcgEventlog `protobuf:"bytes,1,rep,name=event_logs,json=eventLogs,proto3" json:"event_logs,omitempty"`
}

func (x *GetCcEventlogResponse) Reset() {
        *x = GetCcEventlogResponse{}
        if protoimpl.UnsafeEnabled {
                mi := &file_proto_ccnp_server_proto_msgTypes[13]
                ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
                ms.StoreMessageInfo(mi)
        }
}

func (x *GetCcEventlogResponse) String() string {
        return protoimpl.X.MessageStringOf(x)
}

func (*GetCcEventlogResponse) ProtoMessage() {}

func (x *GetCcEventlogResponse) ProtoReflect() protoreflect.Message {
        mi := &file_proto_ccnp_server_proto_msgTypes[13]
        if protoimpl.UnsafeEnabled && x != nil {
                ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
                if ms.LoadMessageInfo() == nil {
                        ms.StoreMessageInfo(mi)
                }
                return ms
        }
        return mi.MessageOf(x)
}

// Deprecated: Use GetCcEventlogResponse.ProtoReflect.Descriptor instead.
func (*GetCcEventlogResponse) Descriptor() ([]byte, []int) {
        return file_proto_ccnp_server_proto_rawDescGZIP(), []int{13}
}

func (x *GetCcEventlogResponse) GetEventLogs() []*TcgEventlog {
        if x != nil {
                return x.EventLogs
        }
        return nil
}

var File_proto_ccnp_server_proto protoreflect.FileDescriptor

var file_proto_ccnp_server_proto_rawDesc = []byte{
        0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x63, 0x6e, 0x70, 0x2d, 0x73, 0x65, 0x72,
        0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x63, 0x63, 0x6e, 0x70, 0x5f,
        0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x62, 0x22, 0x2e, 0x0a, 0x12, 0x48, 0x65, 0x61,
        0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
        0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
        0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x13, 0x48, 0x65,
        0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
        0x65, 0x12, 0x49, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
        0x0e, 0x32, 0x31, 0x2e, 0x63, 0x63, 0x6e, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
        0x70, 0x62, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
        0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x53, 0x74,
        0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4f, 0x0a, 0x0d,
        0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a,
        0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x45,
        0x52, 0x56, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x54, 0x5f, 0x53,
        0x45, 0x52, 0x56, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x45, 0x52, 0x56,
        0x49, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x03, 0x22, 0x1c, 0x0a,
        0x1a, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x6c, 0x67, 0x6f, 0x72,
        0x69, 0x74, 0x68, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x36, 0x0a, 0x1b, 0x47,
        0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74,
        0x68, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x6c,
        0x67, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x6c, 0x67,
        0x6f, 0x49, 0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
        0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
        0x74, 0x22, 0x33, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d,
        0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
        0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
        0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x8c, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x63,
        0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
        0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
        0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64,
        0x12, 0x20, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
        0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x88,
        0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
        0x09, 0x48, 0x01, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a,
        0x0a, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x5f,
        0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x4b, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x63, 0x52, 0x65,
        0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07,
        0x63, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63,
        0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x63, 0x5f, 0x72, 0x65, 0x70, 0x6f,
        0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x63, 0x52, 0x65, 0x70, 0x6f,
        0x72, 0x74, 0x22, 0x6b, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x63, 0x4d, 0x65, 0x61, 0x73, 0x75,
        0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
        0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
        0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64,
        0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
        0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x6c, 0x67, 0x6f, 0x5f, 0x69,
        0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x6c, 0x67, 0x6f, 0x49, 0x64, 0x22,
        0x57, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x63, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d,
        0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x6d,
        0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
        0x32, 0x19, 0x2e, 0x63, 0x63, 0x6e, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x70,
        0x62, 0x2e, 0x54, 0x63, 0x67, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x6d, 0x65, 0x61,
        0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74,
        0x43, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
        0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69,
        0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
        0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20,
        0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12,
        0x19, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01,
        0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73,
        0x74, 0x61, 0x72, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x38,
        0x0a, 0x09, 0x54, 0x63, 0x67, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61,
        0x6c, 0x67, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x6c,
        0x67, 0x6f, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01,
        0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0xd5, 0x02, 0x0a, 0x0b, 0x54, 0x63, 0x67,
        0x45, 0x76, 0x65, 0x6e, 0x74, 0x6c, 0x6f, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x5f,
        0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x63, 0x4e, 0x75,
        0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02,
        0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x6d, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d,
        0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
        0x28, 0x0d, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a,
        0x07, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
        0x2e, 0x63, 0x63, 0x6e, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x62, 0x2e,
        0x54, 0x63, 0x67, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x52, 0x07, 0x64, 0x69, 0x67, 0x65, 0x73,
        0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65,
        0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x7a,
        0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c,
        0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x49, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x61,
        0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x63,
        0x6e, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x62, 0x2e, 0x54, 0x63, 0x67,
        0x45, 0x76, 0x65, 0x6e, 0x74, 0x6c, 0x6f, 0x67, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e,
        0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e,
        0x66, 0x6f, 0x1a, 0x3c, 0x0a, 0x0e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x45,
        0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
        0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
        0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
        0x22, 0x53, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x6c, 0x6f,
        0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x76, 0x65,
        0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
        0x63, 0x63, 0x6e, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x62, 0x2e, 0x54,
        0x63, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x6c, 0x6f, 0x67, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e,
        0x74, 0x4c, 0x6f, 0x67, 0x73, 0x32, 0x87, 0x04, 0x0a, 0x04, 0x63, 0x63, 0x6e, 0x70, 0x12, 0x6e,
        0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x6c, 0x67, 0x6f,
        0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x2a, 0x2e, 0x63, 0x63, 0x6e, 0x70, 0x5f, 0x73, 0x65, 0x72,
        0x76, 0x65, 0x72, 0x5f, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
        0x74, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
        0x74, 0x1a, 0x2b, 0x2e, 0x63, 0x63, 0x6e, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
        0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x6c, 0x67,
        0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e,
        0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
        0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x2e, 0x63, 0x63, 0x6e, 0x70, 0x5f, 0x73, 0x65, 0x72,
        0x76, 0x65, 0x72, 0x5f, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
        0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
        0x74, 0x1a, 0x2b, 0x2e, 0x63, 0x63, 0x6e, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
        0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e,
        0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56,
        0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x22, 0x2e,
        0x63, 0x63, 0x6e, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x62, 0x2e, 0x47,
        0x65, 0x74, 0x43, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
        0x74, 0x1a, 0x23, 0x2e, 0x63, 0x63, 0x6e, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
        0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
        0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x63, 0x4d,
        0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x2e, 0x63, 0x63, 0x6e,
        0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43,
        0x63, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
        0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x63, 0x6e, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65,
        0x72, 0x5f, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x63, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
        0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
        0x5e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x6c, 0x6f, 0x67,
        0x12, 0x24, 0x2e, 0x63, 0x63, 0x6e, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x70,
        0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x6c, 0x6f, 0x67, 0x52,
        0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x63, 0x6e, 0x70, 0x5f, 0x73, 0x65,
        0x72, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x63, 0x45, 0x76, 0x65,
        0x6e, 0x74, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
        0x67, 0x5a, 0x65, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75,
        0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x61, 0x69, 0x72, 0x6f, 0x6e, 0x67, 0x63, 0x68, 0x65,
        0x6e, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2d, 0x63,
        0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x2d, 0x70, 0x72, 0x69, 0x6d,
        0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x2f, 0x74, 0x72, 0x65, 0x65, 0x2f, 0x67, 0x6f, 0x5f, 0x73,
        0x64, 0x6b, 0x5f, 0x64, 0x65, 0x76, 0x31, 0x2f, 0x73, 0x64, 0x6b, 0x2f, 0x67, 0x6f, 0x6c, 0x61,
        0x6e, 0x67, 0x2f, 0x63, 0x63, 0x6e, 0x70, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
        file_proto_ccnp_server_proto_rawDescOnce sync.Once
        file_proto_ccnp_server_proto_rawDescData = file_proto_ccnp_server_proto_rawDesc
)

func file_proto_ccnp_server_proto_rawDescGZIP() []byte {
        file_proto_ccnp_server_proto_rawDescOnce.Do(func() {
                file_proto_ccnp_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_ccnp_server_proto_rawDescData)
        })
        return file_proto_ccnp_server_proto_rawDescData
}

var file_proto_ccnp_server_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_ccnp_server_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_proto_ccnp_server_proto_goTypes = []interface{}{
        (HealthCheckResponse_ServingStatus)(0), // 0: ccnp_server_pb.HealthCheckResponse.ServingStatus
        (*HealthCheckRequest)(nil),             // 1: ccnp_server_pb.HealthCheckRequest
        (*HealthCheckResponse)(nil),            // 2: ccnp_server_pb.HealthCheckResponse
        (*GetDefaultAlgorithmRequest)(nil),     // 3: ccnp_server_pb.GetDefaultAlgorithmRequest
        (*GetDefaultAlgorithmResponse)(nil),    // 4: ccnp_server_pb.GetDefaultAlgorithmResponse
        (*GetMeasurementCountRequest)(nil),     // 5: ccnp_server_pb.GetMeasurementCountRequest
        (*GetMeasurementCountResponse)(nil),    // 6: ccnp_server_pb.GetMeasurementCountResponse
        (*GetCcReportRequest)(nil),             // 7: ccnp_server_pb.GetCcReportRequest
        (*GetCcReportResponse)(nil),            // 8: ccnp_server_pb.GetCcReportResponse
        (*GetCcMeasurementRequest)(nil),        // 9: ccnp_server_pb.GetCcMeasurementRequest
        (*GetCcMeasurementResponse)(nil),       // 10: ccnp_server_pb.GetCcMeasurementResponse
        (*GetCcEventlogRequest)(nil),           // 11: ccnp_server_pb.GetCcEventlogRequest
        (*TcgDigest)(nil),                      // 12: ccnp_server_pb.TcgDigest
        (*TcgEventlog)(nil),                    // 13: ccnp_server_pb.TcgEventlog
        (*GetCcEventlogResponse)(nil),          // 14: ccnp_server_pb.GetCcEventlogResponse
        nil,                                    // 15: ccnp_server_pb.TcgEventlog.ExtraInfoEntry
}
var file_proto_ccnp_server_proto_depIdxs = []int32{
        0,  // 0: ccnp_server_pb.HealthCheckResponse.status:type_name -> ccnp_server_pb.HealthCheckResponse.ServingStatus
        12, // 1: ccnp_server_pb.GetCcMeasurementResponse.measurement:type_name -> ccnp_server_pb.TcgDigest
        12, // 2: ccnp_server_pb.TcgEventlog.digests:type_name -> ccnp_server_pb.TcgDigest
        15, // 3: ccnp_server_pb.TcgEventlog.extra_info:type_name -> ccnp_server_pb.TcgEventlog.ExtraInfoEntry
        13, // 4: ccnp_server_pb.GetCcEventlogResponse.event_logs:type_name -> ccnp_server_pb.TcgEventlog
        3,  // 5: ccnp_server_pb.ccnp.GetDefaultAlgorithm:input_type -> ccnp_server_pb.GetDefaultAlgorithmRequest
        5,  // 6: ccnp_server_pb.ccnp.GetMeasurementCount:input_type -> ccnp_server_pb.GetMeasurementCountRequest
        7,  // 7: ccnp_server_pb.ccnp.GetCcReport:input_type -> ccnp_server_pb.GetCcReportRequest
        9,  // 8: ccnp_server_pb.ccnp.GetCcMeasurement:input_type -> ccnp_server_pb.GetCcMeasurementRequest
        11, // 9: ccnp_server_pb.ccnp.GetCcEventlog:input_type -> ccnp_server_pb.GetCcEventlogRequest
        4,  // 10: ccnp_server_pb.ccnp.GetDefaultAlgorithm:output_type -> ccnp_server_pb.GetDefaultAlgorithmResponse
        6,  // 11: ccnp_server_pb.ccnp.GetMeasurementCount:output_type -> ccnp_server_pb.GetMeasurementCountResponse
        8,  // 12: ccnp_server_pb.ccnp.GetCcReport:output_type -> ccnp_server_pb.GetCcReportResponse
        10, // 13: ccnp_server_pb.ccnp.GetCcMeasurement:output_type -> ccnp_server_pb.GetCcMeasurementResponse
        14, // 14: ccnp_server_pb.ccnp.GetCcEventlog:output_type -> ccnp_server_pb.GetCcEventlogResponse
        10, // [10:15] is the sub-list for method output_type
        5,  // [5:10] is the sub-list for method input_type
        5,  // [5:5] is the sub-list for extension type_name
        5,  // [5:5] is the sub-list for extension extendee
        0,  // [0:5] is the sub-list for field type_name
}

func init() { file_proto_ccnp_server_proto_init() }
func file_proto_ccnp_server_proto_init() {
        if File_proto_ccnp_server_proto != nil {
                return
        }
        if !protoimpl.UnsafeEnabled {
                file_proto_ccnp_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
                        switch v := v.(*HealthCheckRequest); i {
                        case 0:
                                return &v.state
                        case 1:
                                return &v.sizeCache
                        case 2:
                                return &v.unknownFields
                        default:
                                return nil
                        }
                }
                file_proto_ccnp_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
                        switch v := v.(*HealthCheckResponse); i {
                        case 0:
                                return &v.state
                        case 1:
                                return &v.sizeCache
                        case 2:
                                return &v.unknownFields
                        default:
                                return nil
                        }
                }
                file_proto_ccnp_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
                        switch v := v.(*GetDefaultAlgorithmRequest); i {
                        case 0:
                                return &v.state
                        case 1:
                                return &v.sizeCache
                        case 2:
                                return &v.unknownFields
                        default:
                                return nil
                        }
                }
                file_proto_ccnp_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
                        switch v := v.(*GetDefaultAlgorithmResponse); i {
                        case 0:
                                return &v.state
                        case 1:
                                return &v.sizeCache
                        case 2:
                                return &v.unknownFields
                        default:
                                return nil
                        }
                }
                file_proto_ccnp_server_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
                        switch v := v.(*GetMeasurementCountRequest); i {
                        case 0:
                                return &v.state
                        case 1:
                                return &v.sizeCache
                        case 2:
                                return &v.unknownFields
                        default:
                                return nil
                        }
                }
                file_proto_ccnp_server_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
                        switch v := v.(*GetMeasurementCountResponse); i {
                        case 0:
                                return &v.state
                        case 1:
                                return &v.sizeCache
                        case 2:
                                return &v.unknownFields
                        default:
                                return nil
                        }
                }
                file_proto_ccnp_server_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
                        switch v := v.(*GetCcReportRequest); i {
                        case 0:
                                return &v.state
                        case 1:
                                return &v.sizeCache
                        case 2:
                                return &v.unknownFields
                        default:
                                return nil
                        }
                }
                file_proto_ccnp_server_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
                        switch v := v.(*GetCcReportResponse); i {
                        case 0:
                                return &v.state
                        case 1:
                                return &v.sizeCache
                        case 2:
                                return &v.unknownFields
                        default:
                                return nil
                        }
                }
                file_proto_ccnp_server_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
                        switch v := v.(*GetCcMeasurementRequest); i {
                        case 0:
                                return &v.state
                        case 1:
                                return &v.sizeCache
                        case 2:
                                return &v.unknownFields
                        default:
                                return nil
                        }
                }
                file_proto_ccnp_server_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
                        switch v := v.(*GetCcMeasurementResponse); i {
                        case 0:
                                return &v.state
                        case 1:
                                return &v.sizeCache
                        case 2:
                                return &v.unknownFields
                        default:
                                return nil
                        }
                }
                file_proto_ccnp_server_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
                        switch v := v.(*GetCcEventlogRequest); i {
                        case 0:
                                return &v.state
                        case 1:
                                return &v.sizeCache
                        case 2:
                                return &v.unknownFields
                        default:
                                return nil
                        }
                }
                file_proto_ccnp_server_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
                        switch v := v.(*TcgDigest); i {
                        case 0:
                                return &v.state
                        case 1:
                                return &v.sizeCache
                        case 2:
                                return &v.unknownFields
                        default:
                                return nil
                        }
                }
                file_proto_ccnp_server_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
                        switch v := v.(*TcgEventlog); i {
                        case 0:
                                return &v.state
                        case 1:
                                return &v.sizeCache
                        case 2:
                                return &v.unknownFields
                        default:
                                return nil
                        }
                }
                file_proto_ccnp_server_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
                        switch v := v.(*GetCcEventlogResponse); i {
                        case 0:
                                return &v.state
                        case 1:
                                return &v.sizeCache
                        case 2:
                                return &v.unknownFields
                        default:
                                return nil
                        }
                }
        }
        file_proto_ccnp_server_proto_msgTypes[6].OneofWrappers = []interface{}{}
        file_proto_ccnp_server_proto_msgTypes[10].OneofWrappers = []interface{}{}
        type x struct{}
        out := protoimpl.TypeBuilder{
                File: protoimpl.DescBuilder{
                        GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
                        RawDescriptor: file_proto_ccnp_server_proto_rawDesc,
                        NumEnums:      1,
                        NumMessages:   15,
                        NumExtensions: 0,
                        NumServices:   1,
                },
                GoTypes:           file_proto_ccnp_server_proto_goTypes,
                DependencyIndexes: file_proto_ccnp_server_proto_depIdxs,
                EnumInfos:         file_proto_ccnp_server_proto_enumTypes,
                MessageInfos:      file_proto_ccnp_server_proto_msgTypes,
        }.Build()
        File_proto_ccnp_server_proto = out.File
        file_proto_ccnp_server_proto_rawDesc = nil
        file_proto_ccnp_server_proto_goTypes = nil
        file_proto_ccnp_server_proto_depIdxs = nil
}
